"""
    The script generate an Excel file with the vulnerability information
    grouped by what is defined in the 'TEAM_REPORT_GROUP_FIELDS'.
    Actually: 'RA', 'Team', 'Rpm Name', 'Package Name' and 'CVE-REF'
"""
import sys
import os
import pandas as pd

sys.path.insert(1, os.path.dirname(__file__) + "/../python_script")
import lib.utility_lib as Util  # noqa: E402

# Configuration file
CONFIG_PROPERTY_FILE = './config_properties.yml'

# CONSTANTS
REPORT_FOLDER = "./reports/"
TEAM_REPORT_FILE_NAME = REPORT_FOLDER + "cve_report.xlsx"
TEAM_REPORT_GROUP_FIELDS = [
    'RA', 'Team', 'Rpm Name', 'Package Name', 'Severity', 'CVE-REF'
]
TEAM_REPORT_ITEMS_COLUMN_NAME = "#Image name * #Package Path"
TEAM_REPORT_COLUMN_NUMBER = len(TEAM_REPORT_GROUP_FIELDS)


@Util.strict_types
def team_rpm_report(df: pd.DataFrame):
    """
    Create a report using the 'TEAM_REPORT_GROUP_FIELDS' values
    Args:
        df: va report data frame
    """
    Util.create_working_dir_and_remove_tree_if_exists(REPORT_FOLDER, False)
    Util.write_sheet_to_excel(
        TEAM_REPORT_FILE_NAME,
        df.groupby(TEAM_REPORT_GROUP_FIELDS).size().reset_index(
            name=TEAM_REPORT_ITEMS_COLUMN_NAME))


# ------------------ MAIN ------------------
if sys.version_info.major < 3 or pd.__version__ < "1.1.5":
    print("""\
WARNING! Script running with python version minor of 3 or pandas version
minor of 1.1.5, it is not guaranteed to work properly.
""")

# Check argument numbers
if len(sys.argv) != 2:
    print(f"""\
ERROR on parameters!!

The script generate an Excel file with the vulnerability information grouped by
Team and Package.

Usage: theScript <VA report file>

Example:
    python {sys.argv[0]} output_tables/cENM-va-report-for-jira.xlsx
""")
    sys.exit(0)

if os.path.exists(sys.argv[1]):
    # Load report file
    va_report_df = Util.get_df_from_spreadsheet_file(
        os.path.normpath(sys.argv[1]))
    if va_report_df is None:
        print("ERROR! Impossible to load input file.")
        sys.exit(1)

    team_rpm_report(va_report_df)

    print(f"\nGenerated team report file: {TEAM_REPORT_FILE_NAME}\n")
else:
    print(f"\nERROR! please enter a valid input file: {sys.argv[1]}\n")
    sys.exit(1)
