
import os
import pytest
import sys

# adding py_script directory to the system path of python script
sys.path.insert(0, os.path.join(os.path.abspath(os.path.dirname(__file__)), '../python_script'))
from step_definition.step_data import StepData
from step_impl.step_filter_by_severity import StepFilterBySeverity
import lib.utility_lib as Util


# Input file
INPUT_PARAMETERS = "testsuite/input_parameters.yml"


@pytest.fixture(scope="module", autouse=True)
def global_var():
    va_repo_table = Util.get_df_from_spreadsheet_file(os.path.join('testsuite/testData', 'cENM-va-report-for-jira.csv'))
    va_repo_table = va_repo_table.reset_index(drop=True)
    pytest.va_repo_n_table = va_repo_table.copy()
    pytest.va_repo_n_1_table = va_repo_table.copy()
    pytest.base_image_table = \
        Util.get_df_from_spreadsheet_file(os.path.join('testsuite/testData', 'empty_base_image.csv'))
    pytest.va_report_enhanced_table = \
        Util.get_df_from_spreadsheet_file(os.path.join('testsuite/testData', 'cENM-va-report-for-jira_clean.csv'))
    pytest.pre_process_discarded_rows_df = \
        Util.get_df_from_spreadsheet_file(os.path.join('testsuite/testData', 'RemoveRows_VaReport.csv'))
    dict_from_config_file = Util.config_file_to_dictionary(INPUT_PARAMETERS, 'config')
    pytest.data_path = dict_from_config_file['output_path']


def test_success_step_0():
    step_info = StepData(pytest.va_report_enhanced_table, pytest.base_image_table)
    set_0 = StepFilterBySeverity(step_info, pytest.pre_process_discarded_rows_df, ['CRITICAL'])
    set_0.run_step()
    process_discarded_rows_df = step_info.get_unprocessed_dict('pre_process_discarded_rows_df')
    new_va_report = step_info.get_steps_output_dict()
    assert len(new_va_report['step_0'].Severity != 'CRITICAL'), "ERROR!"
    assert len(process_discarded_rows_df) + len(new_va_report['step_0']) - len(pytest.va_report_enhanced_table) != 0, \
        "error"
