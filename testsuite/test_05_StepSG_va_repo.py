import os
import sys
import numpy as np
import pandas as pd
import pytest


# adding py_script directory to the system path of python script
sys.path.insert(0, os.path.join(os.path.abspath(os.path.dirname(__file__)), '../python_script'))
import lib.utility_lib as Util
from step_definition.step_data import StepData
from step_impl.step_add_team_ra_cna import StepAddTeamRaCna

# Configuration file
CONFIG_PROPERTY_FILE = './config_properties.yml'

# Input file
INPUT_PARAMETERS = "testsuite/input_parameters.yml"


@pytest.fixture(scope="module", autouse=True)
def global_var():
    va_repo_table = Util.get_df_from_spreadsheet_file(os.path.join('testsuite/testData', 'va_report_input_step5.csv'))
    base_image_table = Util.get_df_from_spreadsheet_file(os.path.join('testsuite/testData', 'empty_base_image.csv'))
    dict_from_config_file = Util.config_file_to_dictionary(CONFIG_PROPERTY_FILE, 'csv_generator_properties')
    sg_mapping_table_file_name = Util.get_file_from_dictionary(dict_from_config_file, 'sg_mapping_table')
    sg_mapping_table = Util.get_df_from_spreadsheet_file(sg_mapping_table_file_name)
    cxp_df = Util.get_df_from_spreadsheet_file(os.path.join('testsuite/testData', 'CXPTableWithRA.csv'))
    pytest.va_repo_table = va_repo_table.copy()
    pytest.base_image_table = base_image_table.copy()
    pytest.sg_mapping_table = sg_mapping_table.copy()
    pytest.cxp_df = cxp_df.copy()


@Util.strict_types
def verify_step_add_team_ra_cna(va_df: pd.DataFrame, sg_df: pd.DataFrame, cxp_df: pd.DataFrame) -> pd.DataFrame:
    step_info = StepData(va_df, pytest.base_image_table)
    va_report_add_team_ra_cna_df = StepAddTeamRaCna(step_info, sg_df, cxp_df, "./testsuite/outputData")
    va_report_add_team_ra_cna_df.run_step()
    new_va_report = step_info.get_curr_va_report_df
    return new_va_report


def test_success_step_add_team_ra_cna_full_inputdata(global_var):
    print(Util.colour_text(Util.MyColours.BLUE,
                           "*************************************************************************************\n"))

    va_repo = {
        'Image Name': ['eric_A', 'eric_B'],
        'CXP from Rpm Name': ['CXP_A', 'CXP_B']
    }

    sg_mapping = {
        'SG List from VA Scan': ['eric_A', 'eric_B'],
        'Team from PRM': ['Enigma', 'Enigma'],
        'RA': ['Cloud Native', 'CN'],
        'CNA from PRM': ['CNA_A', 'CNA_B']
    }

    cxp = {
        'CXP': ['CXP_A', 'CXP_B'],
        'CXP Resp.Team': ['Smart', 'Smart'],
        'Requirement Area': ['Cloud Native', 'CN'],
        'Father CNA': ['CNA_AA', 'CNA_AA']
    }
    va_repo_table = pd.DataFrame(va_repo)
    sg_mapping_table = pd.DataFrame(sg_mapping)
    cxp_table = pd.DataFrame(cxp)
    new_va_report = verify_step_add_team_ra_cna(va_repo_table, sg_mapping_table, cxp_table)

    result = np.where(
        (new_va_report['Team from PRM'] == sg_mapping['Team from PRM']) &
        (new_va_report['RA'] == sg_mapping['RA']) &
        (new_va_report['CNA from PRM'] == sg_mapping['CNA from PRM']) &
        (new_va_report['CXP Resp.Team'] == cxp_table['CXP Resp.Team']) &
        (new_va_report['Requirement Area'] == cxp_table['Requirement Area']),
        True, False)

    # converting the NumPy array
    # to a Pandas series
    print(type(result))
    ds = pd.Series(result)
    assert ds.all()


def test_success_step_add_team_ra_cna_partial_inputdata(global_var):
    print(Util.colour_text(Util.MyColours.BLUE,
                           "*************************************************************************************\n"))

    va_repo = {
        'Image Name': ['eric_A'],
        'CXP from Rpm Name': ['CXP_A']
    }

    sg_mapping = {
        'SG List from VA Scan': ['eric_A'],
        'Team from PRM': ['Enigma'],
        'RA': ['Cloud Native'],
        'CNA from PRM': ['CNA_A']
    }

    cxp = {
        'CXP': ['CXP_Z'],
        'CXP Resp.Team': ['Smart'],
        'Requirement Area': ['Cloud Native'],
        'Father CNA': ['CNA_AA']
    }
    va_repo_table = pd.DataFrame(va_repo)
    sg_mapping_table = pd.DataFrame(sg_mapping)
    cxp_table = pd.DataFrame(cxp)

    new_va_report = verify_step_add_team_ra_cna(va_repo_table, sg_mapping_table, cxp_table)

    result = np.where(
        (new_va_report['Team from PRM'] == sg_mapping['Team from PRM']) &
        (new_va_report['RA'] == sg_mapping['RA']) &
        (new_va_report['CNA from PRM'] == sg_mapping['CNA from PRM']),
        True, False)

    # converting the NumPy array
    # to a Pandas series
    print(type(result))
    ds = pd.Series(result)
    assert ds.all()
