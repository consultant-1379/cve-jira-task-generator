from typing import Union
import json
import requests
import pandas as pd


def get_team_inventory_as_dataframe() -> Union[pd.DataFrame, None]:
    def get_team_inventory_json():
        endpoint = "https://pdu-oss-tools1.seli.wh.rnd.internal.ericsson.com/team-inventory/api/teams"
        headers = {'Accept': 'application/json'}

        try:
            resp = requests.get(endpoint, headers=headers)
        except requests.exceptions.RequestException as exc:
            print('\nException caught while getting data '
                  f'from Team Inventory server:\n{exc}\n')
            return None

        if resp.status_code != 200:
            print('\nWrong response status code received from '
                  f'Team Inventory server: {resp.status_code}\n')
            return None

        json_resp = None
        try:
            json_resp = resp.json()
        except json.decoder.JSONDecodeError as exc:
            print(f'Got an error from json decoding:\n{exc}\n')

        return json_resp

    df_cols_enm_active = None

    json_response = get_team_inventory_json()

    if json_response is not None:
        df_all_cols = pd.json_normalize(json_response)
        enm_active_teams = (df_all_cols['program'] == "ENM") & (df_all_cols['state'] == "active")
        enm_missing_team = (df_all_cols['name'] == "SpiceGirls")
        df_all_cols_enm_active = df_all_cols[(enm_active_teams | enm_missing_team)]
        df_cols_enm_active = df_all_cols_enm_active.loc[:, ('name', 'programArea', 'teamEmail')]
        df_cols_enm_active.rename(
            columns={'name': 'Team', 'programArea': 'Requirement Area'},
            inplace=True)

    return df_cols_enm_active


if __name__ == "__main__":
    df = get_team_inventory_as_dataframe()

    if df is None:
        print('Failure in getting Team Inventory')
    else:
        print(df)
